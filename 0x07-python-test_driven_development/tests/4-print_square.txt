The ``4-print_square`` module
======================

Using ``print_square``
-------------------

First import
``print_square`` from the ``4-print_square`` module:

	>>> print_square = __import__("4-print_square").print_square

Normal cases

	>>> print_square(4)
	####
	####
	####
	####

	>>> print_square(0)
	


Error cases

	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'

	>>> print_square(-3)
	Traceback (most recent call last):
	TypeError: size must be >= 0

	>>> print_square("asdsd")
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(0.1)
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(-0.92)
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square([-0.3])
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square((-0.7, 0.11))
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square(float('nan'))
	Traceback (most recent call last):
	TypeError: size must be an integer